import Head from "next/head";
import styles from "@/styles/Home.module.scss";

import type {
  GetServerSideProps,
  GetServerSidePropsContext,
  PreviewData,
} from "next";
import { ParsedUrlQuery } from "querystring";

interface IParams extends ParsedUrlQuery {
  id: string;
}

const tempData = [
  { id: 1, title: "title1", content: "content1" },
  { id: 2, title: "title2", content: "content2" },
  { id: 3, title: "title3", content: "content3" },
];

export default function SSR({ post }: any) {
  // 브라우저에서 출력됨
  // 개발 모드에서는 server에도 출력됨
  // console.log(posts);
  return (
    <>
      <Head>
        <title>SSR</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.main}>
        <div className={styles.center}>
          <div>Static Generation With Data depends on paths</div>
        </div>
        <div>{post.title}</div>
        <div>{post.content}</div>
      </main>
    </>
  );
}

export async function getServerSideProps(context: GetServerSidePropsContext) {
  console.log("getServerSideProps...");

  // path로 입력받은 키를 파라미터로 하나의 컨텐츠 조회
  // const res= await fetch("");
  // const posts = await res.json();

  const { params, locales, locale, defaultLocale } = context;
  const { id } = params as IParams;

  const post = tempData.filter((el) => String(el.id) === id)[0];

  //console.log("context : ", context);
  console.log("params : ", params);
  console.log("post : ", post);

  return {
    // Passed to the page component as props
    props: { post },
  };
}
